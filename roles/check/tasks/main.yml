---
- name: make temp directory
  command: mktemp -d
  register: mktemp

- name: create temp directory
  command: mktemp -d {{ mktemp.stdout }}/openshift-XXXXXXX
  register: mktemp
  changed_when: false

- name: copy admin config
  command: cp /etc/origin/master/admin.kubeconfig {{ mktemp.stdout }}/admin.kubeconfig
  changed_when: false

- name: check for not ready nodes
  shell: oc get nodes --no-headers=true --config={{ mktemp.stdout }}/admin.kubeconfig | grep -v ' Ready' || true
  register: notready
  ignore_errors: true

- name: Not ready nodes
  debug:
    var: notready.stdout_lines

- name: check etcd state
  shell: /usr/bin/etcdctl --cert-file /etc/etcd/peer.crt --key-file /etc/etcd/peer.key --ca-file /etc/etcd/ca.crt -C https://{{ inventory_hostname }}:2379 cluster-health
  register: etcdstate

- name: show etcd state
  debug:
    var: etcdstate.stdout_lines
  when: etcdstate.stdout | length > 0

- name: check default openshift-infra and logging projects for failed pods
  shell: oc get pods -o wide --no-headers=true --config={{ mktemp.stdout }}/admin.kubeconfig -n {{ item }} | grep -v ' Running' || true
  register: failedpods
  with_items:
    - default
    - openshift-infra
    - logging
  ignore_errors: true
  changed_when: false

- name: failed failedpods
  debug:
    var: failedpods.stdout_lines

- name: check internal SysDNS resolution for cluster.local
  command: "nslookup {{ item }}"
  with_items:
    - "docker-registry.default.svc.cluster.local"
    - "docker-registry.default.svc"

- name: check external DNS upstream resolution
  command: "nslookup {{ item }}"
  with_items:
    - "www.google.com"
    - "www.google.co.uk"
    - "www.google.de"

- name: run test build
  include_tasks: build.yml

- name: delete temp directory
  file:
    name: "{{ mktemp.stdout }}"
    state: absent
  changed_when: false
